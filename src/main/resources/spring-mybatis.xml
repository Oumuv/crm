<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd    
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描 -->  
    <context:component-scan base-package="com.oumuv.dao" />
    <context:component-scan base-package="com.oumuv.core" />
    <context:component-scan base-package="com.oumuv.entity" />
    <!-- 引入配置文件 -->
<!--     <bean id="propertyConfigurer"   -->
<!--         class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">   -->
<!--         <property name="location" value="classpath:jdbc.properties" />   -->
<!--     </bean>   -->

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialPoolSize" value="${jdbc.initialSize}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxPoolSize" value="${jdbc.maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minPoolSize" value="${jdbc.minIdle}"></property>
        <!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime" value="0"></property>
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3-->
        <property name="acquireIncrement" value="5"></property>
        <!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
        <property name="idleConnectionTestPeriod" value="60"></property>
        <!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
        <property name="acquireRetryAttempts" value="30"></property>
        <!-- 跟踪 C3p0 连接池连接泄漏   -->
        <property name="unreturnedConnectionTimeout"><value>100</value></property>
        <property name="debugUnreturnedConnectionStackTraces"><value>true</value></property>
    </bean>
    
  
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/oumuv/dao/mapping/*.xml"></property>  
        <!-- 指定Mybatis配置文件地址 -->
        <property name="configLocation" value="classpath:mybatis.xml"/>
        <!--扫描实体类包告诉mybatis可以使用实体类的别名作为返回类型-->
        <property name="typeAliasesPackage" value="com.oumuv.entity"/>
    </bean>

  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.oumuv.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
	<!-- 开启事务管理注解 -->
  	<tx:annotation-driven  transaction-manager="transactionManager" />
</beans>  
