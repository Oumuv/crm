<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd"
	default-lazy-init="true">

	<description>Shiro Configuration</description>

	<!-- Shiro's main business-tier object for web-enabled applications -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="ShiroRealm" />
		<property name="cacheManager" ref="cacheManager" />
	</bean>
	
	
	<!-- 項目自定义的Realm -->
	<bean id="ShiroRealm" class="com.oumuv.core.ShiroRealm"></bean>
<!-- 	<bean id="myShiroRealm" class="com.luo.shiro.realm.MyShiroRealm"> -->
<!-- 		<property name="cacheManager" ref="cacheManager" /> -->
<!-- 	</bean> -->

<!-- 	<bean id="sampleRealm" class="org.apache.shiro.realm.jdbc.JdbcRealm"> -->
<!-- 		<property name="dataSource" ref="dataSource" /> -->
<!-- 		<property name="authenticationQuery" -->
<!-- 			value="select t.password from my_user t where t.username = ?" /> -->
<!-- 		<property name="userRolesQuery" -->
<!-- 			value="select a.rolename from my_user_role t left join my_role a on t.roleid = a.id where t.username = ? " /> -->
<!-- 		<property name="permissionsQuery" -->
<!-- 			value="SELECT B.PERMISSION FROM MY_ROLE T LEFT JOIN MY_ROLE_PERMISSION A ON T.ID = A.ROLE_ID LEFT JOIN MY_PERMISSION B ON A.PERMISSION = B.ID WHERE T.ROLENAME = ? " /> -->
<!-- 		<property name="permissionsLookupEnabled" value="true" /> -->
<!-- 		<property name="saltStyle" value="NO_SALT" /> -->
<!-- 		<property name="credentialsMatcher" ref="hashedCredentialsMatcher" /> -->
<!-- 	</bean> -->


	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.jsp" />
		<!-- <property name="successUrl" value="/" /> -->
<!-- 		<property name="unauthorizedUrl" value="/" /> -->
		<property name="filterChainDefinitions">
			<!-- anon,authc,authcBasic,user是第一组认证过滤器 -->
			<!-- perms,port,rest,roles,ssl是第二组授权过滤器 -->
			<value>
				/testurl/** = anon
				/open/** = anon
				/js/** = anon
				/register* = anon
				/css/** = anon
				/images/** = anon
				/login.jsp = anon
				/user/login* = anon
				/user/check* = anon
				/user/getAuthCode* = anon
				/pagejumps* = anon
				/user/logout* = logout
				/pageturn* = authc
				/word/** = authc
				/user/** = authc
				/** = anon
			</value>
		</property>
	</bean>

	<!-- 用户授权信息Cache -->
	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- AOP式方法级权限检查 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"  
    depends-on="lifecycleBeanPostProcessor" /> 
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
</beans>