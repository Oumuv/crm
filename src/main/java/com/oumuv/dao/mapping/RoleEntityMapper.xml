<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oumuv.dao.RoleEntityMapper">
  <resultMap id="BaseResultMap" type="com.oumuv.entity.RoleEntity">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_desc" jdbcType="VARCHAR" property="roleDesc" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, role_name, role_desc, status, role_code
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role_info
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from role_info
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.oumuv.entity.RoleEntity">
    insert into role_info (role_id, role_name, role_desc, 
      status, role_code)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{roleCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.oumuv.entity.RoleEntity">
    insert into role_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleDesc != null">
        role_desc,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="roleCode != null">
        role_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.oumuv.entity.RoleEntity">
    update role_info
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        role_desc = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="roleCode != null">
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oumuv.entity.RoleEntity">
    update role_info
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_desc = #{roleDesc,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      role_code = #{roleCode,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  
  
  
<!--   ******************************************************************** -->
 <select id="findRoleByUid" parameterType="java.lang.Long" resultMap="BaseResultMap">
	select r.* 
	from role_info r 
	inner join user_role_info  ur on r. role_id=ur.rid
	inner join user_info u on  u.id=ur.uid
	where u.id=#{uid}
  </select>
 <select id="findRoleByInput" parameterType="java.lang.String" resultMap="BaseResultMap">
	select 
	<include refid="Base_Column_List" />
	from role_info 
	where role_name like '%${input}%'
  </select>
 <select id="findRoleByInputResult" parameterType="java.lang.String" resultType="com.oumuv.core.info.RoleInfo">
	SELECT 
	ro.role_id roleId,ro.role_name roleName,ro.role_desc roleDesc,ro.`status` status,ro.role_code roleCode , count(DISTINCT rr.rf_id) mCount,count(DISTINCT  p.id) pCount
	FROM role_info ro
	LEFT JOIN role_right_info rr ON ro.role_id=rr.rf_role_id
	LEFT JOIN right_info ri ON ri.right_code=rr.rf_right_code
	LEFT JOIN role_permission_info rp ON rp.rid=ro.role_id
	LEFT JOIN permission_info p ON p.id=rp.pid
	WHERE ro.role_name LIKE '%${input}%'
	GROUP BY ro.role_id
  </select>
  
  <insert id="insertMenusByRidAndMids" parameterType="java.lang.String">
 	 insert into role_right_info(rf_role_id,rf_right_code) values${sql}
  </insert>
  <insert id="insertPsermissionByRidAndPids" parameterType="java.lang.String">
 	 insert into role_permission_info(rid,pid) values${sql}
  </insert>
   <delete id="deleteMenusByRidAndMids" parameterType="java.lang.String">
   delete from role_right_info where rf_role_id=${rid} and rf_right_code in ${sql}
  </delete>
   <delete id="deletePsermissionByRidAndPids" parameterType="java.lang.String">
    delete from role_permission_info where rid=${rid} and pid in ${sql}
  </delete>
  
   <select id="getAllRoleEntity"  resultMap="BaseResultMap">
	select * 
	from role_info
  </select>
  
</mapper>